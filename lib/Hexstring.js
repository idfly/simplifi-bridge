'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const Hexstring = contract({
  "contractName": "Hexstring",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "bytesToHexString",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"bytesToHexString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/hdd1/git/smart-contracts_v2/contracts/Hexstring.sol\":\"Hexstring\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/hdd1/git/smart-contracts_v2/contracts/Hexstring.sol\":{\"keccak256\":\"0xf1136c129cb62adfc0eab4727cab91cbbd7bb39c35ce5ffe60c25fa6a77411cc\",\"urls\":[\"bzzr://269aeab89337571c98c785cc8107fbe76be4ea70272c1cb01ee9bd041b53f56e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061033d806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637d520c228114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009e9436949293602493928401919081908401838280828437509497506101139650505050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d85781810151838201526020016100c0565b50505050905090810190601f1680156101055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060006060806060600086519450846002026040519080825280601f01601f191660200182016040528015610153578160200160208202803883390190505b5093506040805190810160405280601081526020017f30313233343536373839616263646566000000000000000000000000000000008152509250829150600090505b848160ff16101561030657816004888360ff168151811015156101b557fe5b90602001015160f860020a900460f860020a0260f060f860020a02167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060020a900460f860020a900481518110151561020c57fe5b90602001015160f860020a900460f860020a02848260020260ff1681518110151561023357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081878260ff1681518110151561027557fe5b90602001015160f860020a900460f860020a02600f60f860020a021660f860020a90048151811015156102a457fe5b90602001015160f860020a900460f860020a02848260020260010160ff168151811015156102ce57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610196565b5091959450505050505600a165627a7a723058205fa923e158ee40bef9ada12413a2247a0e98c49fec8b0abbf79188442e71d7be0029",
  "deployedBytecode": "0x6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637d520c228114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009e9436949293602493928401919081908401838280828437509497506101139650505050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d85781810151838201526020016100c0565b50505050905090810190601f1680156101055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060006060806060600086519450846002026040519080825280601f01601f191660200182016040528015610153578160200160208202803883390190505b5093506040805190810160405280601081526020017f30313233343536373839616263646566000000000000000000000000000000008152509250829150600090505b848160ff16101561030657816004888360ff168151811015156101b557fe5b90602001015160f860020a900460f860020a0260f060f860020a02167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060020a900460f860020a900481518110151561020c57fe5b90602001015160f860020a900460f860020a02848260020260ff1681518110151561023357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081878260ff1681518110151561027557fe5b90602001015160f860020a900460f860020a02600f60f860020a021660f860020a90048151811015156102a457fe5b90602001015160f860020a900460f860020a02848260020260010160ff168151811015156102ce57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610196565b5091959450505050505600a165627a7a723058205fa923e158ee40bef9ada12413a2247a0e98c49fec8b0abbf79188442e71d7be0029",
  "sourceMap": "29:543:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29:543:0;;;;;;;",
  "deployedSourceMap": "29:543:0:-;;;;;;;;;;;;;;;;;;;;;;;55:515;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;55:515:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;55:515:0;;-1:-1:-1;55:515:0;;-1:-1:-1;;;;;;;55:515:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;55:515:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;121:6;146:11;182:19;230:29;290:23;353:7;160:5;:12;146:26;;214:3;218:1;214:5;204:16;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;204:16:0;;182:38;;230:50;;;;;;;;;;;;;;;;;;;;322:15;290:48;;363:1;353:11;;348:185;370:3;366:1;:7;;;348:185;;;410:10;450:1;430:5;436:1;430:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;430:8:0;;-1:-1:-1;;;430:8:0;441:4;-1:-1:-1;;;430:15:0;;429:22;;;;;;;;-1:-1:-1;;;421:31:0;;410:43;;;;;;;;;;;;;;;-1:-1:-1;;;410:43:0;;-1:-1:-1;;;410:43:0;394:6;401:1;405;401:5;394:13;;;;;;;;;;;;;;;;:59;;;;;;;;;;;487:10;506:5;512:1;506:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;506:8:0;;-1:-1:-1;;;506:8:0;517:3;-1:-1:-1;;;506:14:0;;-1:-1:-1;;;498:23:0;;487:35;;;;;;;;;;;;;;;-1:-1:-1;;;487:35:0;;-1:-1:-1;;;487:35:0;467:6;474:1;478;474:5;482:1;474:9;467:17;;;;;;;;;;;;;;;;:55;;;;;;;;;;-1:-1:-1;375:3:0;;348:185;;;-1:-1:-1;556:6:0;;55:515;-1:-1:-1;;;;;55:515:0:o",
  "source": "pragma solidity  >=0.4.24;\n\n\ncontract Hexstring {\n\n    function bytesToHexString(bytes memory value) public view returns(string memory) {\n        uint256 len = value.length;\n        bytes memory result = new bytes(len*2);\n        string memory characterString = \"0123456789abcdef\";\n        bytes memory characters = bytes(characterString);\n        for (uint8 i = 0; i < len; i++) {\n            result[i * 2] = characters[uint256((value[i] & 0xF0) >> 4)];\n            result[i * 2 + 1] = characters[uint256(value[i] & 0xF)];\n        }\n        return string(result);\n    }\n}",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-18T05:06:20.102Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
})


exports.Hexstring = Hexstring