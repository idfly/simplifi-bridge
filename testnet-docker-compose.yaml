version: '3.6'

services:
  adapter1_net1:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres_net1
      - pgadmin4
      - chainlink_net1
    env_file:
    - ./env_connect_to_network_2.env
    networks:
      static-network:
        ipv4_address: 172.20.128.55
    ports:
     - "8081:8081" # for debug
    environment:
      - SK=0x469e5c05e289274dd8570c31f2f0f21236f2e071613ac9c565821985e7ae641e
  adapter2_net1:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres2_net1
      - pgadmin4
      - chainlink2_net1
    env_file:
    - ./env_connect_to_network_2.env
    networks:
      static-network:
        ipv4_address: 172.20.128.57
    environment:
     - SK=0x95472b385de2c871fb293f07e76a56e8e93ea4e743fe940afbd44c30730211dc
  control1_net1:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres_net1
      - pgadmin4
      - chainlink_net1
    env_file:
    - ./env_connect_to_network_1.env
    networks:
      static-network:
        ipv4_address: 172.20.128.58
    environment:
     - SK=0x187994e6d93bb29e386fe7ab50232a6a2bea5d6f61046b803b9e9b8306b7d268
  control2_net1:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres2_net1
      - pgadmin4
      - chainlink2_net1
    env_file:
    - ./env_connect_to_network_1.env
    networks:
      static-network:
        ipv4_address: 172.20.128.59
    environment:
     - SK=0xf5e350eb75d845a8cd538e06331ee6eeb159c54710c6c84c725cd77e2e0dde59
  chainlink_net1:
    image: smartcontract/chainlink:0.9.4
    command: local n -p /network1/chainlink/chainlink.pwd -a /network1/chainlink/api.pwd
    depends_on:
      - mypostgres_net1
      - pgadmin4
    networks:
      static-network:
        ipv4_address: 172.20.128.21
    volumes:
      - ./network1/chainlink:/network1/chainlink
    ports:
     - "6688:6688"      
    environment:
     - ROOT=/chainlink/root
     - LOG_LEVEL=debug
     - ETH_CHAIN_ID=4
     - MIN_OUTGOING_CONFIRMATIONS=0
     - MIN_INCOMING_CONFIRMATIONS=3
     - CHAINLINK_TLS_PORT=0
     - SECURE_COOKIES=false
     - ALLOW_ORIGINS=*
#     - ETH_URL=wss://rinkeby.infura.io/ws/v3/0f4453c71dd145c6b819bbbf60a96e9d
     - ETH_URL=wss://rinkeby.infura.io/ws/v3/ab95bf9f6dd743e6a8526579b76fe358
     - DATABASE_URL=postgresql://postgres:password@172.20.128.14:5432/chainlinkdb?sslmode=disable
    env_file:
    - ./build/addrs_network1.env
    restart: on-failure
  chainlink2_net1:
    image: smartcontract/chainlink:0.9.4
    command: local n -p /network1/chainlink/chainlink.pwd -a /network1/chainlink/api.pwd
    depends_on:
      - mypostgres2_net1
      - pgadmin4
    networks:
      static-network:
        ipv4_address: 172.20.128.23
    volumes:
      - ./network1/chainlink:/network1/chainlink
    ports:
     - "7000:6688"      
    environment:
     - ROOT=/chainlink/root
     - LOG_LEVEL=debug
     - ETH_CHAIN_ID=4
     - MIN_OUTGOING_CONFIRMATIONS=0
     - MIN_INCOMING_CONFIRMATIONS=3
     - CHAINLINK_TLS_PORT=0
     - SECURE_COOKIES=false
     - ALLOW_ORIGINS=*
#     - ETH_URL=wss://rinkeby.infura.io/ws/v3/0f4453c71dd145c6b819bbbf60a96e9d
     - ETH_URL=wss://rinkeby.infura.io/ws/v3/ab95bf9f6dd743e6a8526579b76fe358
     - DATABASE_URL=postgresql://postgres:password@172.20.128.16:5432/chainlinkdb?sslmode=disable
    env_file:
    - ./build/addrs_network1.env
    restart: on-failure
  mypostgres_net1:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.20.128.14
    volumes:
      - /var/lib/postgres/network1/db-data/:/var/lib/postgresql/data
#      - ./db/init/schema.sql:/docker-entrypoint-initdb.d/schema.sql
#    ports:
#     - "5432:5432"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=chainlinkdb
     - PGDATA=/var/lib/postgresql/data/
  mypostgres2_net1:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.20.128.16
    volumes:
      - /var/lib/postgres/network1/node2/db-data/:/var/lib/postgresql/data
#      - ./db/init/schema.sql:/docker-entrypoint-initdb.d/schema.sql
#    ports:
#     - "5432:5432"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=chainlinkdb
     - PGDATA=/var/lib/postgresql/data/     


#==============================================================2-d network====================================================================

  chainlink_net2:
    image: smartcontract/chainlink:0.9.4
    command: local n -p /network2/chainlink/chainlink.pwd -a /network2/chainlink/api.pwd
    depends_on:
      - mypostgres_net2
      - pgadmin4
    networks:
      static-network:
        ipv4_address: 172.20.128.22
    volumes:
      - ./network2/chainlink:/network2/chainlink
    ports:
     - "6689:6688"
    environment:
     - ROOT=/chainlink/root
     - LOG_LEVEL=debug
     - ETH_CHAIN_ID=97
     - MIN_OUTGOING_CONFIRMATIONS=0
     - MIN_INCOMING_CONFIRMATIONS=3
     - CHAINLINK_TLS_PORT=0
     - SECURE_COOKIES=false
     - ALLOW_ORIGINS=*
     - ETH_URL=ws://95.217.104.54:8576
     - DATABASE_URL=postgresql://postgres:password@172.20.128.15:5432/chainlinkdb?sslmode=disable
    env_file:
      - ./build/addrs_network2.env
    restart: on-failure
  chainlink2_net2:
    image: smartcontract/chainlink:0.9.4
    command: local n -p /network2/chainlink/chainlink.pwd -a /network2/chainlink/api.pwd
    depends_on:
      - mypostgres2_net2
      - pgadmin4
    networks:
      static-network:
        ipv4_address: 172.20.128.63
    volumes:
      - ./network2/chainlink:/network2/chainlink
    ports:
     - "7002:6688"
    environment:
     - ROOT=/chainlink/root
     - LOG_LEVEL=debug
     - ETH_CHAIN_ID=97
     - MIN_OUTGOING_CONFIRMATIONS=0
     - MIN_INCOMING_CONFIRMATIONS=3
     - CHAINLINK_TLS_PORT=0
     - SECURE_COOKIES=false
     - ALLOW_ORIGINS=*
     - ETH_URL=ws://95.217.104.54:8576
     - DATABASE_URL=postgresql://postgres:password@172.20.128.64:5432/chainlinkdb?sslmode=disable
    env_file:
      - ./build/addrs_network2.env
    restart: on-failure
  mypostgres_net2:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.20.128.15
    volumes:
      - /var/lib/postgres/network2/db-data/:/var/lib/postgresql/data
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=chainlinkdb
     - PGDATA=/var/lib/postgresql/data/     
  mypostgres2_net2:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.20.128.64
    volumes:
      - /var/lib/postgres/network2/node2/db-data/:/var/lib/postgresql/data
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=chainlinkdb
     - PGDATA=/var/lib/postgresql/data/     
  pgadmin4:
    image: dpage/pgadmin4
    networks:
      static-network:
        ipv4_address: 172.20.128.13
    ports:
      - "5959:80"
    environment:
     - PGADMIN_DEFAULT_EMAIL=brute@localhost
     - PGADMIN_DEFAULT_PASSWORD=brute    
    volumes:
     - ./network1/pgadmin:/root/.pgadmin     
  adapter1_net2:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres_net2
      - pgadmin4
      - chainlink_net2
    env_file:
    - ./env_connect_to_network_1.env
    networks:
      static-network:
        ipv4_address: 172.20.128.56
    ports:
     - "8082:8082" # for debug
    environment:
     - SK=0x9894defbe159c1abba7db3f88b122bf94c6838a28a98af9466e85c8f573c43bc
  adapter2_net2:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres2_net2
      - pgadmin4
      - chainlink2_net2
    env_file:
    - ./env_connect_to_network_1.env
    networks:
      static-network:
        ipv4_address: 172.20.128.60
    environment:
     - SK=0xafd8124dd3abec91d07dca54878cd296666a96decd122cc7646e9357df21a6de
  control1_net2:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres_net2
      - pgadmin4
      - chainlink_net2
    env_file:
    - ./env_connect_to_network_2.env
    networks:
      static-network:
        ipv4_address: 172.20.128.61
    environment:
     - SK=0x3fdb56439eb7c05074586993925c6e06103a5b770b46aa29e399cc693d44ddf7
  control2_net2:
    build:
      context: ./
      dockerfile: ./adapter/adapterdgu/Dockerfile
    depends_on:
      - mypostgres2_net2
      - pgadmin4
      - chainlink2_net2
    env_file:
    - ./env_connect_to_network_2.env
    networks:
      static-network:
        ipv4_address: 172.20.128.62
    environment:
     - SK=0xe84538a8b4059da88d5a76544329093da99603fe05b0f1332f737c74253688c3
  crutch_ganache:
    build: ./network1/ganache
    networks:
      static-network:
        ipv4_address: 172.20.128.11
    ports:
     - "7545:7545"     
networks:
  static-network:
    name: dev_net
    ipam:
      config:
        - subnet: 172.20.0.0/16  
#docker-compose v3+ do not use ip_range
#ip_range: 172.28.5.0/24
